version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: erp-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: erp_auth
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - erp-network

  # Auth Service
  auth-service:
    build: 
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: erp-auth-service
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      ENVIRONMENT: development
      MONGODB_URL: mongodb://admin:password123@mongodb:27017/erp_auth?authSource=admin
      DATABASE_NAME: erp_auth
      SECRET_KEY: ${JWT_SECRET_KEY:-your-super-secret-key-change-this-in-production}
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      REFRESH_TOKEN_EXPIRE_DAYS: 7
      SERVICE_NAME: auth-service
      SERVICE_PORT: 8001
      SERVICE_HOST: 0.0.0.0
      LOG_LEVEL: INFO
    depends_on:
      - mongodb
    volumes:
      - ./auth-service:/app
    networks:
      - erp-network

  # Inventory Service
  inventory-service:
    build: 
      context: ./inventory-service
      dockerfile: Dockerfile
    container_name: erp-inventory-service
    restart: unless-stopped
    ports:
      - "8002:8002"
    environment:
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/erp_inventory?authSource=admin
      AUTH_SERVICE_URL: http://auth-service:8001
      JWT_SECRET: your-super-secret-key-change-in-production
      NODE_ENV: production
      PORT: 8002
    depends_on:
      - mongodb
    volumes:
      - ./inventory-service:/app
    networks:
      - erp-network

  # Inventory Service (Development with hot-reload)
  inventory-service-dev:
    build:
      context: ./inventory-service
      dockerfile: Dockerfile.dev
    container_name: erp-inventory-service-dev
    restart: unless-stopped
    ports:
      - "8002:8002"
    environment:
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/erp_inventory?authSource=admin
      AUTH_SERVICE_URL: http://auth-service:8001
      JWT_SECRET: your-super-secret-key-change-in-production
      NODE_ENV: development
      PORT: 8002
      GRAPHQL_PLAYGROUND: true
      GRAPHQL_INTROSPECTION: true
    depends_on:
      - mongodb
    volumes:
      - ./inventory-service:/app
      - /app/node_modules
    networks:
      - erp-network
    profiles:
      - development

  # MongoDB Express (Development only)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: erp-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      - mongodb
    networks:
      - erp-network
    profiles:
      - development

  # Frontend React Application (Production)
  frontend:
    build:
      context: ./erp-frontend
      dockerfile: Dockerfile
    container_name: erp-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      VITE_API_URL: http://localhost:8001
    depends_on:
      - auth-service
    networks:
      - erp-network
      
  # Frontend React Application (Development with hot-reload)
  frontend-dev:
    build:
      context: ./erp-frontend
      dockerfile: Dockerfile.dev
    container_name: erp-frontend-dev
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:8001
    volumes:
      - ./erp-frontend:/app
      - /app/node_modules
    depends_on:
      - auth-service
    networks:
      - erp-network
    profiles:
      - development

volumes:
  mongodb_data:

networks:
  erp-network:
    driver: bridge
