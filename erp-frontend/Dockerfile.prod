# syntax=docker/dockerfile:1

# Build stage
FROM node:20-alpine AS builder

# Set working directory
WORKDIR /app

# Accept build arguments
ARG VITE_AUTH_SERVICE_URL
ARG VITE_INVENTORY_SERVICE_URL
ARG VITE_SALES_SERVICE_URL
ARG VITE_STRIPE_PUBLIC_KEY

# Set environment variables for build
ENV VITE_AUTH_SERVICE_URL=$VITE_AUTH_SERVICE_URL
ENV VITE_INVENTORY_SERVICE_URL=$VITE_INVENTORY_SERVICE_URL
ENV VITE_SALES_SERVICE_URL=$VITE_SALES_SERVICE_URL
ENV VITE_STRIPE_PUBLIC_KEY=$VITE_STRIPE_PUBLIC_KEY
ENV NODE_ENV=production

# Copy package files first for better caching
COPY package.json package-lock.json* ./

# Clean install dependencies
RUN npm cache clean --force && \
    npm install --legacy-peer-deps --no-audit --prefer-offline

# Copy source code
COPY . .

# Build application
RUN npm run build 2>/dev/null || npm run build:no-type-check || vite build

# Production stage
FROM nginx:alpine

# Install curl for healthcheck
RUN apk add --no-cache curl

# Copy custom nginx config
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy built files from builder
COPY --from=builder /app/dist /usr/share/nginx/html

# Add healthcheck
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/ || exit 1

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]

