version: '3.8'

services:
  # MongoDB - You can use MongoDB Atlas free tier instead
  mongodb:
    image: mongo:7.0
    container_name: erp-mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: erp_auth
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - erp-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7.2-alpine
    container_name: erp-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - erp-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Auth Service
  auth-service:
    image: ghcr.io/mahmudul-islam32/erp-auth-service:latest
    container_name: erp-auth-service
    restart: always
    ports:
      - "8001:8001"
    environment:
      ENVIRONMENT: production
      MONGODB_URL: ${MONGODB_URL:-mongodb://admin:password123@mongodb:27017/erp_auth?authSource=admin}
      DATABASE_NAME: erp_auth
      SECRET_KEY: ${JWT_SECRET_KEY}
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      REFRESH_TOKEN_EXPIRE_DAYS: ${REFRESH_TOKEN_EXPIRE_DAYS:-7}
      SERVICE_NAME: auth-service
      SERVICE_PORT: 8001
      SERVICE_HOST: 0.0.0.0
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - erp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Inventory Service
  inventory-service:
    image: ghcr.io/mahmudul-islam32/erp-inventory-service:latest
    container_name: erp-inventory-service
    restart: always
    ports:
      - "8002:8002"
    environment:
      NODE_ENV: production
      PORT: 8002
      MONGODB_URI: ${MONGODB_URL:-mongodb://admin:password123@mongodb:27017/erp_inventory?authSource=admin}
      AUTH_SERVICE_URL: http://auth-service:8001
      JWT_SECRET: ${JWT_SECRET_KEY}
    depends_on:
      mongodb:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    volumes:
      - inventory_uploads:/app/uploads
    networks:
      - erp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Sales Service
  sales-service:
    image: ghcr.io/mahmudul-islam32/erp-sales-service:latest
    container_name: erp-sales-service
    restart: always
    ports:
      - "8003:8003"
    environment:
      ENVIRONMENT: production
      MONGODB_URL: ${MONGODB_URL:-mongodb://admin:password123@mongodb:27017/erp_sales?authSource=admin}
      DATABASE_NAME: erp_sales
      AUTH_SERVICE_URL: http://auth-service:8001
      INVENTORY_SERVICE_URL: http://inventory-service:8002
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      SERVICE_NAME: Sales Service
      SERVICE_VERSION: 1.0.0
      SERVICE_PORT: 8003
      SERVICE_HOST: 0.0.0.0
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      DEBUG: "false"
      DEFAULT_TAX_RATE: ${DEFAULT_TAX_RATE:-0.08}
      DEFAULT_CURRENCY: ${DEFAULT_CURRENCY:-USD}
      REDIS_URL: redis://redis:6379
      # Stripe Payment Gateway
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      STRIPE_API_VERSION: "2023-10-16"
      STRIPE_CURRENCY: usd
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-service:
        condition: service_healthy
      inventory-service:
        condition: service_healthy
    networks:
      - erp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    image: ghcr.io/mahmudul-islam32/erp-frontend:latest
    container_name: erp-frontend
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - auth-service
      - inventory-service
      - sales-service
    networks:
      - erp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  inventory_uploads:
    driver: local

networks:
  erp-network:
    driver: bridge

